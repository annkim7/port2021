{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BLUE\\\\Documents\\\\GitHub\\\\port2021_react\\\\port2021\\\\src\\\\slider.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useState, useContext } from 'react';\nimport $ from \"jquery\";\nimport summaryData from './data.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Slider = props => {\n  _s();\n\n  let [summary, summaryFunc] = useState(summaryData);\n  let [array, arrayFunc] = useState([...summary, ...summary, ...summary]);\n  let [bg, bgFunc] = useState({\n    width: \"100%\"\n  });\n  let sumCount = summary.length;\n  let pop = props.pop;\n  let setPop = props.setPop;\n  let num = props.num;\n  let setNum = props.setNum;\n\n  let Idx = i => {\n    setNum(i);\n    console.log(i);\n  };\n\n  useEffect(() => {\n    $.fn.selfSlide = function (options) {\n      var defaults = {\n        slideWidth: 600,\n        slideMargin: 100,\n        maxSlides: 3,\n        responsiveMargin: 20\n      };\n      var options = $.extend({}, defaults, options);\n      var slideWrapper = $(this),\n          slides = slideWrapper.find('.slides'),\n          slide = slides.find('li'),\n          currentIdx = 0,\n          slideCount = slide.length,\n          slideWidth = options.slideWidth,\n          slideMargin = options.slideMargin,\n          movAmt,\n          maxSlides = options.maxSlides,\n          responsiveMargin = options.responsiveMargin,\n          newSlides,\n          newSlideWidth,\n          prevBtn = slideWrapper.find('.prev'),\n          nextBtn = slideWrapper.find('.next');\n      newSlideWidth = slideWidth; // for(var i = 0; i < slideCount; i++){\n      //     var slideIdx = i + 1;\n      //     slide.eq(i).addClass('item-' + slideIdx);\n      // };\n      //복사본 생성하기 뒤에 5개 추가\n      // slides.append(slide.clone(true, true).addClass('clone'));\n      // slides.append(slide.clone(true, true));\n      //복사본 생성하기 앞에 5개 추가\n      // slides.prepend(slide.clone(true, true).addClass('clone'));\n      // slides.prepend(slide.clone(true, true));\n      //가로배열하기\n\n      function slideLayout(sw, sm) {\n        newSlides = $('.slide_wrapper li');\n        movAmt = sw + sm;\n        newSlides.each(function (idx) {\n          $(this).css({\n            left: movAmt * idx + 'px',\n            width: sw + 'px'\n          });\n        });\n      }\n\n      slideLayout(slideWidth, slideMargin);\n      var divSlide = slideCount / 3; // 중앙배치하기\n\n      function setSlidePos() {\n        var ulMoveAmt = -movAmt * divSlide + 'px';\n        slides.css({\n          transform: 'translateX(' + ulMoveAmt + ')'\n        });\n      }\n\n      setSlidePos(); //좌우버튼 슬라이드 작동하기\n\n      nextBtn.click(function () {\n        moveSlide(currentIdx + 1);\n      });\n      prevBtn.click(function () {\n        moveSlide(currentIdx - 1);\n      }); // 슬라이드 이동 함수\n\n      function moveSlide(num) {\n        slides.stop().animate({\n          left: movAmt * -num + 'px'\n        }, 500, function () {\n          if (currentIdx == divSlide || currentIdx == -divSlide) {\n            slides.css({\n              left: '0px'\n            });\n            currentIdx = 0;\n          }\n        });\n        currentIdx = num;\n      } //자동 슬라이드\n\n\n      var timer = undefined;\n\n      function autoSlide() {\n        if (timer == undefined) {\n          timer = setInterval(function () {\n            moveSlide(currentIdx + 1);\n          }, 3000);\n        }\n      }\n\n      autoSlide();\n\n      function stopSlide() {\n        clearInterval(timer);\n        timer = undefined;\n      }\n\n      slideWrapper.mouseenter(function () {\n        stopSlide();\n      });\n      slideWrapper.mouseleave(function () {\n        autoSlide();\n      }); //반응형 슬라이드\n\n      $(window).resize(function () {\n        console.log($(this).width());\n\n        if ($(this).width() < 700) {\n          responsiveMargin = 20;\n          newSlideWidth = (slides.width() - responsiveMargin * (maxSlides - 1)) / maxSlides;\n        } else {\n          newSlideWidth = slideWidth;\n          responsiveMargin = slideMargin;\n        }\n\n        if ($(this).width() <= 500) {\n          newSlideWidth = slides.width();\n          responsiveMargin = 0;\n        }\n\n        slideLayout(newSlideWidth, responsiveMargin);\n        setSlidePos();\n      });\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slide_wrapper mainSlide\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"slides\",\n      children: array.map((a, i) => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          summaryCard: array[i],\n          pop: pop,\n          setPop: setPop,\n          num: i,\n          setNum: setNum,\n          sumCount: sumCount,\n          bg: bg,\n          setBg: bgFunc\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Slider, \"ww3ybgmw92ySFiFUTzNpAS1daKI=\");\n\n_c = Slider;\n\nfunction Card(props) {\n  let contents = props.summaryCard.contents;\n  let pop = props.pop;\n  let setPop = props.setPop;\n\n  let change = () => {\n    setPop(true);\n  };\n\n  let num = props.num;\n  let setNum = props.setNum;\n  let sumCount = props.sumCount;\n\n  let Idx = i => {\n    console.log(i);\n    console.log(sumCount);\n    setNum(i);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"pop-btn\",\n      onClick: () => {\n        change();\n        Idx(num);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"title\",\n        children: props.summaryCard.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: contents.map((a, i) => {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"list\",\n            children: props.summaryCard.contents[i]\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = Card;\nexport default Slider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Slider\");\n$RefreshReg$(_c2, \"Card\");","map":{"version":3,"sources":["C:/Users/BLUE/Documents/GitHub/port2021_react/port2021/src/slider.js"],"names":["React","useEffect","useState","useContext","$","summaryData","Slider","props","summary","summaryFunc","array","arrayFunc","bg","bgFunc","width","sumCount","length","pop","setPop","num","setNum","Idx","i","console","log","fn","selfSlide","options","defaults","slideWidth","slideMargin","maxSlides","responsiveMargin","extend","slideWrapper","slides","find","slide","currentIdx","slideCount","movAmt","newSlides","newSlideWidth","prevBtn","nextBtn","slideLayout","sw","sm","each","idx","css","left","divSlide","setSlidePos","ulMoveAmt","transform","click","moveSlide","stop","animate","timer","undefined","autoSlide","setInterval","stopSlide","clearInterval","mouseenter","mouseleave","window","resize","map","a","Card","contents","summaryCard","change","title"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, {useEffect, useState, useContext} from 'react';\nimport $ from \"jquery\";\nimport summaryData from './data.js';\n\n\nconst Slider=(props)=>{\n\n    let [summary, summaryFunc] = useState(summaryData);\n    let [array, arrayFunc] = useState([...summary, ...summary, ...summary]);\n    let [bg, bgFunc] = useState({width: \"100%\"});\n\n    let sumCount = summary.length;\n\n    let pop = props.pop;\n    let setPop = props.setPop;\n\n    let num = props.num;\n    let setNum = props.setNum;\n\n    let Idx = (i) =>{\n        setNum(i);\n        console.log(i);\n    }\n\n    \n    \n    useEffect(()=>{\n        \n        $.fn.selfSlide = function(options){\n            var defaults = {\n                slideWidth : 600,\n                slideMargin : 100,\n                maxSlides : 3,\n                responsiveMargin : 20\n            };\n        \n            var options = $.extend({}, defaults, options);\n        \n        \n            var slideWrapper = $(this),\n                slides = slideWrapper.find('.slides'),\n                slide = slides.find('li'),\n                currentIdx = 0,\n                slideCount = slide.length,\n                slideWidth = options.slideWidth,\n                slideMargin = options.slideMargin,\n                movAmt,\n                maxSlides = options.maxSlides,\n                responsiveMargin = options.responsiveMargin,\n                newSlides,\n                newSlideWidth,\n                prevBtn = slideWrapper.find('.prev'),\n                nextBtn = slideWrapper.find('.next');\n        \n            newSlideWidth = slideWidth;\n        \n            // for(var i = 0; i < slideCount; i++){\n            //     var slideIdx = i + 1;\n            //     slide.eq(i).addClass('item-' + slideIdx);\n            // };\n        \n        \n            //복사본 생성하기 뒤에 5개 추가\n            // slides.append(slide.clone(true, true).addClass('clone'));\n            // slides.append(slide.clone(true, true));\n        \n            //복사본 생성하기 앞에 5개 추가\n            // slides.prepend(slide.clone(true, true).addClass('clone'));\n            // slides.prepend(slide.clone(true, true));\n        \n            //가로배열하기\n            function slideLayout(sw, sm){\n                newSlides = $('.slide_wrapper li');\n                movAmt = sw + sm;\n        \n                newSlides.each(function(idx){\n                    $(this).css({left: movAmt*idx + 'px', width: sw + 'px'});\n                });\n\n            }\n            slideLayout(slideWidth, slideMargin);\n            \n            var divSlide = slideCount/3;\n\n            // 중앙배치하기\n            function setSlidePos(){\n                var ulMoveAmt = -movAmt * divSlide + 'px';\n                slides.css({transform: 'translateX('+ ulMoveAmt + ')'});\n            }\n            setSlidePos();\n        \n            //좌우버튼 슬라이드 작동하기\n            nextBtn.click(function(){\n                moveSlide(currentIdx + 1);\n        \n            });\n            prevBtn.click(function(){\n                moveSlide(currentIdx - 1);\n        \n            });\n            \n\n            // 슬라이드 이동 함수\n            function moveSlide(num){\n                slides.stop().animate({left:movAmt * -num + 'px'}, 500, function(){\n                    if(currentIdx == divSlide || currentIdx == -divSlide){\n                        slides.css({left: '0px'});\n                        currentIdx = 0;\n                    }\n                });\n                currentIdx = num;\n            }\n        \n        \n        \n            //자동 슬라이드\n            var timer = undefined;\n        \n            function autoSlide(){\n                if(timer == undefined){\n                    timer = setInterval(function(){\n                        moveSlide(currentIdx + 1);\n                    }, 3000);\n                }\n            }\n        \n            autoSlide();\n        \n            function stopSlide(){\n                clearInterval(timer);\n                timer = undefined;\n            }\n        \n            slideWrapper.mouseenter(function(){\n                stopSlide();\n            });\n        \n            slideWrapper.mouseleave(function(){\n                autoSlide();\n            });\n        \n            //반응형 슬라이드\n            $(window).resize(function(){\n                console.log($(this).width());\n                if($(this).width() < 700){\n                    responsiveMargin = 20;\n                    newSlideWidth = (slides.width() - responsiveMargin*(maxSlides - 1))/maxSlides;\n                    \n                }else{\n                    newSlideWidth = slideWidth;\n                    responsiveMargin = slideMargin;\n                }\n        \n                if($(this).width() <= 500){\n                    newSlideWidth = slides.width();\n                    responsiveMargin = 0;\n                }\n                slideLayout(newSlideWidth, responsiveMargin);\n                setSlidePos();\n            });\n            \n\n        }\n    }, []);\n\n    \n\n\n    return (\n        <div className=\"slide_wrapper mainSlide\">\n            \n            <ul className=\"slides\" >\n                {\n                    array.map((a,i)=>{\n                        return <Card summaryCard = {array[i]} key={i}\n                        pop={pop} setPop={setPop}  num={i} setNum={setNum}\n                        sumCount = {sumCount} bg={bg} setBg={bgFunc}\n                        />\n                    })\n                }\n            </ul>\n            <p className=\"controls\">\n                <span className=\"prev\"></span>\n                <span className=\"next\"></span>\n            </p>\n\n            \n        </div>\n        \n    );\n}\n\nfunction Card(props){\n    let contents = props.summaryCard.contents;\n\n    let pop = props.pop;\n    let setPop = props.setPop;\n\n    let change = () =>{\n        setPop(true);\n    }\n    \n    let num = props.num;\n    let setNum = props.setNum;\n    let sumCount = props.sumCount;\n\n    let Idx = (i) =>{\n        console.log(i);\n        console.log(sumCount);\n        setNum(i);\n        \n    }\n\n\n    return(\n        <li>\n            <a className=\"pop-btn\" onClick={()=>{change(); Idx(num);}} >           \n                <h3 className=\"title\">{props.summaryCard.title}</h3>\n                <div className=\"content\">\n                    {\n                        contents.map((a,i) =>{\n                            return(<span className=\"list\" key={i}>{props.summaryCard.contents[i]}</span>)\n                        })\n                    }\n                    \n                </div>\n            </a> \n        </li>\n    )\n}\n\n\nexport default Slider;\n\n"]},"metadata":{},"sourceType":"module"}